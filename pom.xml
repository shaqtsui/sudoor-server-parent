<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!--
		NOTE :
			Can not clearly divide config into normal profile & release profile as some config below to them both.
			So most config will in normal, only must in release in release profile
			
			Parent POM ONLY maintain non-web:
				Project Info:
					source encoding
					java version
					license name
					repository
					...
					
				Tool:
					release
						mvn release:prepare -Dusername=xxx -Dpassword=xxx
						mvn release:perform
							Actions:
								checkout code base on tag
								mvn deploy -P release-profile,release
							Note:
								 "-Dgpg.passphrase=gpgphrase" can not used to avoid enter gpg password, as gpg plugin is run in inner mvn execution
								 
						mvn release:branch -DbranchName=my-branch -DupdateBranchVersions=true -DupdateWorkingCopyVersions=false
						
					sonar
				
				reporting:
					
				SDLC Config:
					release profile:
						license
							license should only be attached during release, since different release need different license
						sign-artifacts
							sign only only required for release check
	-->

	<!--
		NOTE :
			Refer to sudoor-design/System Management Sketch for detailed Info.
			
			Parent POM ONLY maintain web project:
				Project Info
					
				SDLC Config:
					test.performance - in profile
					selenium IT
				
				Note:
					In DSR, UT & IT are mixed & executed by maven-surefire-plugin so maven-failsafe-plugin not required
					
			Run Selenium out of maven:
				-Dwebdriver.chrome.driver=/usr/webdriver/chromedriver -Druntime.websvr.hostname=localhost -Druntime.websvr.port=8080

	-->

	<!-- The Basics -->
	<parent>
		<groupId>io.spring.platform</groupId>
		<artifactId>platform-bom</artifactId>
		<version>2.0.1.RELEASE</version>
		<relativePath />
	</parent>

	<groupId>net.gplatform</groupId>
	<artifactId>sudoor-server-parent</artifactId>
	<version>2.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.7</java.version>
		<!-- used by maven-compiler-plugin -->
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<!-- used by license-maven-plugin -->
		<license.licenseName>gpl_v2</license.licenseName>
		<!-- used by maven-surefire-plugin -->
		<argLine>-Dfile.encoding=UTF-8 -XX:MaxPermSize=1024m -Djava.net.preferIPv4Stack=true -Dwebdriver.chrome.driver=${webdriver.chrome.driver} -Druntime.websvr.hostname=${runtime.websvr.hostname} -Druntime.websvr.port=${runtime.websvr.port}</argLine>
		<!-- used by spring-boot-maven-plugin -->
		<run.jvmArguments>-XX:MaxPermSize=1024m</run.jvmArguments>

		<!-- version start -->
		<org.seleniumhq.selenium.version>2.48.2</org.seleniumhq.selenium.version>
		<com.lazerycode.jmeter.version>1.10.1</com.lazerycode.jmeter.version>
		<org.springframework.springloaded.version>1.2.5.RELEASE</org.springframework.springloaded.version>
		<!-- version end -->
		
		<!-- test env (used by selenium) start -->
		<webdriver.chrome.driver>/usr/webdriver/chromedriver</webdriver.chrome.driver>
		<!-- no need to config runtime.appsvr.* as the app server is DSR -->
		<runtime.websvr.hostname>localhost</runtime.websvr.hostname>
		<runtime.websvr.port>80</runtime.websvr.port>
		<!-- test env (used by selenium) end -->
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${org.seleniumhq.selenium.version}</version>
			<scope>test</scope>
			<exclusions>
				<!-- exclude this as the dependent xml-apis conflict with the one used by hibernate -->
				<exclusion>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-htmlunit-driver</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
	
	<!-- Build Settings -->
	<build>
		<plugins>
			<!-- cannot be used now due to network issue -->
<!-- 			<plugin> -->
<!-- 				<groupId>com.lazerycode.selenium</groupId> -->
<!-- 				<artifactId>driver-binary-downloader-maven-plugin</artifactId> -->
<!-- 				<version>1.0.7</version> -->
<!-- 				<executions> -->
<!-- 					<execution> -->
<!-- 						<goals> -->
<!-- 							<goal>selenium</goal> -->
<!-- 						</goals> -->
<!-- 					</execution> -->
<!-- 				</executions> -->
<!-- 			</plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<tagNameFormat>@{project.version}</tagNameFormat>
					<releaseProfiles>release</releaseProfiles>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.springframework</groupId>
						<artifactId>springloaded</artifactId>
						<version>${org.springframework.springloaded.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.6</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.6</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.18.1</version>
				<reportSets>
					<reportSet>
						<id>integration-tests</id>
						<reports>
							<report>failsafe-report-only</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changelog-plugin</artifactId>
				<version>2.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.10</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.12.1</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
				<version>2.0</version>
			</plugin>
		</plugins>
	</reporting>

	<!-- More Project Information -->
	<name>sudoor-server-parent</name>
	<description>parent project for all sudoor-server project</description>
	<url>http://www.gplatform.net</url>
	<inceptionYear>2013</inceptionYear>
	<licenses>
		<license>
			<name>GNU General Public License, version 2</name>
			<url>http://www.gnu.org/licenses/gpl-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<organization>
		<name>Shark Xu</name>
		<url>http://www.gplatform.net</url>
	</organization>
	<developers>
		<developer>
			<id>xfcjscn</id>
			<name>Shark</name>
			<email>xfcjscn@gmail.com</email>
		</developer>
	</developers>

	<!-- Environment Settings -->
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/xfcjscn/sudoor-server-parent/issues</url>
	</issueManagement>
	<scm>
		<connection>scm:git:https://github.com/xfcjscn/sudoor-server-parent.git</connection>
		<developerConnection>scm:git:https://github.com/xfcjscn/sudoor-server-parent.git</developerConnection>
		<url>https://github.com/xfcjscn/sudoor-server-parent</url>
		<tag>HEAD</tag>
	</scm>

	<repositories>
		<repository>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
			<id>sonatype-oss-snapshots</id>
			<name>sonatype-oss-snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</repository>
		<repository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>sonatype-oss-staging</id>
			<name>sonatype-oss-staging</name>
			<url>https://oss.sonatype.org/content/repositories/staging</url>
		</repository>
	</repositories>
	<distributionManagement>
		<repository>
			<id>sonatype-oss-staging-deploy</id>
			<name>sonatype-oss-staging-deploy</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
		</repository>
		<snapshotRepository>
			<id>sonatype-oss-snapshots</id>
			<name>sonatype-oss-snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>license-maven-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>download-licenses</id>
								<goals>
									<goal>download-licenses</goal>
								</goals>
							</execution>
							<execution>
								<id>update-project-license</id>
								<goals>
									<goal>update-project-license</goal>
								</goals>
							</execution>
							<execution>
								<id>first</id>
								<goals>
									<goal>update-file-header</goal>
								</goals>
								<phase>process-sources</phase>
							</execution>
						</executions>
					</plugin>
					
					<!-- Note: variable gpg.passphrase need to used to specify password-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- put jmeter in profile, as it canot apply to project without folder: /src/test/jmeter -->
		<profile>
			<id>test.performance</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.lazerycode.jmeter</groupId>
						<artifactId>jmeter-maven-plugin</artifactId>
						<version>${com.lazerycode.jmeter.version}</version>
						<executions>
							<execution>
								<id>jmeter-tests</id>
								<phase>verify</phase>
								<goals>
									<goal>jmeter</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
